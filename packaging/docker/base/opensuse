#!/usr/bin/env bash
set -e

ver="$1"
case "$ver" in
  15.[0-9]) basever=15 ;;
  42.[0-9]) basever=42 ;;
  *) echo "Invalid openSUSE Leap version: $ver"; exit 1;;
esac

if [ -n "$2" ]; then
  echo "The opensuse script does not support custom architectures."; exit 1
fi

tag=base/opensuse:$ver
distribution=opensuse-$ver

# Support history for architectures in openSUSE Leap 15.x:
# - x86_64:  supported for all versions
# - aarch64: in the main repo for >= 15.3;
#            in the ports repo for <= 15.2:
#            http://download.opensuse.org/ports/aarch64/distribution/leap/
# - i586:    not supported at all
#
# The main download servers still have 42.3 (but not earlier), and only for
# x86_64.  The ports repo does not have 42.x for aarch64.

arch="`uname -m`"
case "$arch" in
  x86_64) ;;
  aarch64) ;;
  *) echo "Unknown or unsupported architecture: $arch"; exit 1;;
esac

if [ "$basever" = 42 ]; then
  if [ "$ver" \< 42.3 ]; then
    echo "ERROR: Only openSUSE Leap 42.3 and above is supported (for now)."
    exit 1
  fi
  if [ "$arch" = aarch64 ]; then
    echo "ERROR: aarch64 is not supported for openSUSE Leap 42.x."
    exit 1
  fi
fi

echo "Preparing openSUSE Leap $ver ($arch) as $tag ..."
echo

dir="$(mktemp -d ${TMPDIR:-/var/tmp}/docker-mkimage.XXXXXXXXXX)"
rootfsDir="$dir/rootfs"
tarFile="$dir/rootfs.tar.xz"

# Note: we do string comparisons with $ver, since -lt and -ge require integer
# arguments.
if [ "$arch" = aarch64 -a "$ver" \< 15.3 ]; then
  # The aarch64 binaries entered the main distribution with openSUSE Leap 15.3.
  mirror="http://download.opensuse.org/ports/$arch/distribution/leap/$ver/repo/oss/$arch/"
elif [ "$basever" = 42 ]; then
  mirror="http://download.opensuse.org/distribution/leap/$ver/repo/oss/suse/$arch/"
else
  mirror="http://download.opensuse.org/distribution/leap/$ver/repo/oss/$arch/"
fi
mirror_noarch="http://download.opensuse.org/distribution/leap/$ver/repo/oss/noarch/"

echo '----- Bootstrapping distribution -----'

if [ -d /data/rinse/cache ]; then
  cachedir=/data/rinse/cache
else
  cachedir=/var/cache/rinse
fi

mkdir -p "$rootfsDir"
../rinse/rinse --cache-dir "$cachedir" \
  --directory "$rootfsDir" --arch "$arch" --distribution "$distribution" \
  --pkgs-dir ../rinse/packages --keyfile ../rinse/keys/opensuse \
  --before-post-install ../rinse/postinst/common/run_all \
  --post-install ../rinse/postinst/opensuse-"$basever" \
  --mirror "$mirror" --mirror-noarch "$mirror_noarch"

echo '----- Updating distribution -----'

chroot "$rootfsDir" zypper refresh
chroot "$rootfsDir" zypper update -y
chroot "$rootfsDir" zypper clean

echo '----- Removing /dev and /proc -----'

# Docker mounts tmpfs at /dev and procfs at /proc so we can remove them
rm -rf "$rootfsDir/dev" "$rootfsDir/proc"
mkdir -p "$rootfsDir/dev" "$rootfsDir/proc"

echo '----- Creating Dockerfile -----'

cat > "$dir/Dockerfile" <<EOF
FROM scratch
ADD $(basename "$tarFile") /
CMD ["/bin/bash"]
RUN echo '%vendor Regina' >> /etc/rpm/macros
EOF

echo '----- Bundling filesystem -----'

tar -c -f "$tarFile" --numeric-owner --auto-compress -C "$rootfsDir" --transform='s,^./,,' .
rm -rf "$rootfsDir"

echo '----- Building docker image -----'

docker build -t "$tag" "$dir"
rm -rf "$dir"

echo '----- Done -----'

exit 0
