#!/usr/bin/perl -w
use strict;

my $dockerfile = 'Dockerfile';

-e 'regina-gen-deb' or
    die "This script must be run from within its own directory";

my $release=$ARGV[0];
$release or die "Usage: ./build <release> [<arch>]";

my $dist;
my $template;

if ($release =~ /^\d\d$/) {
  print "Fedora: $release\n";
  $dist = 'fedora';
  $template = 'fedora.template';
} elsif (-e "/usr/share/debootstrap/scripts/$release") {
    open(DEBOOTSTRAP, '<', "/usr/share/debootstrap/scripts/$release") or die;
    while (<DEBOOTSTRAP>) {
        if (/^keyring .*ubuntu/) {
            print "Ubuntu: $release\n";
            $dist = 'ubuntu';
            $template = 'ubuntu.template';
            last;
        }
        if (/^keyring .*debian/) {
            print "Debian: $release\n";
            $dist = 'debian';
            $template = 'debian.template';
            last;
        }
    }
    close(DEBOOTSTRAP);
    $dist or die "No keyring found in the debootstrap script for $release";
} else {
    die "Not a known debian/ubuntu/fedora release: $release";
}

my $arch=$ARGV[1];
my $relarch=$release;
if (defined $arch) {
    print("Arch: $arch");
    $relarch .= "_$arch";
}

print("Constructing $dockerfile...\n");
open(TEMPLATE, '<', $template) or die;
open(DOCKERFILE, '>', $dockerfile) or die;
while (<TEMPLATE>) {
    s/DIST/$dist/;
    s/RELEASE/$release/;
    s/RELARCH/$relarch/;
    print DOCKERFILE $_;
}
close(TEMPLATE);
close(DOCKERFILE);

my $tag = "user/$dist:$relarch";
print("Building $tag...\n");

system('docker', 'build', '-t', $tag, '-f', $dockerfile, '.') and
    die "The call to 'docker build ...' failed";

unlink($dockerfile) or die "Could not remove $dockerfile";
