pipeline {
    agent any

    stages {
        stage('Git') {
            steps {
                dir ('regina') {
                    git 'https://github.com/regina-normal/regina.git'
                }
                dir ('aux') {
                    git 'https://github.com/regina-normal/aux.git'
                }
            }
        }

        stage('VM') {
            steps {
                dir ('vagrant') {
                    sh 'cp -f ../aux/packaging/jenkins/vagrant/win10_i386.vagrant Vagrantfile'
                    sh 'vagrant up'
                }
            }
        }

        stage('Configure') {
            steps {
                dir ('regina') {
                    sh 'rm -rf build'
                    sh 'mkdir build'
                }
                dir ('vagrant') {
                    sh 'vagrant ssh -c \'c:\\msys32\\usr\\bin\\env MSYSTEM=MINGW32 /usr/bin/bash -l -c \"cd /c/workspace/regina/build && ../../aux/packaging/windows/regina-cmake.sh\"\''
                }
            }
        }

        stage('Environment') {
            steps {
                dir ('vagrant') {
                    sh 'vagrant ssh -c \'c:\\msys32\\usr\\bin\\env MSYSTEM=MINGW32 /usr/bin/bash -l -c \"cd /c/workspace/regina/build && make env\"\''
                }
            }
        }

        stage('Build') {
            steps {
                dir ('vagrant') {
                    sh 'vagrant ssh -c \'c:\\msys32\\usr\\bin\\env MSYSTEM=MINGW32 /usr/bin/bash -l -c \"cd /c/workspace/regina/build && make\"\''
                }
            }
        }

        stage('Verify') {
            steps {
                dir ('regina/build') {
                    script {
                        if (! fileExists('utils/regfiledump.exe')) {
                            error 'Utilities not built.'
                        }
                        if (! fileExists('python/regina/engine.pyd')) {
                            error 'Python module not built.'
                        }
                        if (! fileExists('qtui/src/regina-gui.exe')) {
                            error 'GUI not built.'
                        }
                        if (! fileExists('testsuite/regtestsuite.exe')) {
                            error 'Test suite not built.'
                        }
                        if (! fileExists('docs/engine/index.html')) {
                            error 'API docs not built.'
                        }
                        if (! fileExists('qtui/doc/regina/index.html')) {
                            error 'User handbook not built.'
                        }
                    }
                }
            }
        }

        stage('Test') {
            steps {
                dir ('vagrant') {
                    sh 'vagrant ssh -c \'c:\\msys32\\usr\\bin\\env MSYSTEM=MINGW32 /usr/bin/bash -l -c \"cd /c/workspace/regina/build && make test ARGS=-V\"\''
                }
            }
        }

        stage('Package') {
            steps {
                dir ('vagrant') {
                    sh 'vagrant ssh -c \'c:\\msys32\\usr\\bin\\env MSYSTEM=MINGW32 /usr/bin/bash -l -c \"cd /c/workspace/regina/build && make install\"\''
                    sh 'vagrant ssh -c \'c:\\msys32\\usr\\bin\\env MSYSTEM=MINGW32 /usr/bin/bash -l -c \"cd /c/workspace/regina/build && ../../aux/packaging/windows/helper.pl msi\"\''
                }
            }
        }
    }

    post {
        cleanup {
            dir ('vagrant') {
                sh 'vagrant destroy --force'
            }
        }
    }
}

