pipeline {
    agent { docker { image 'regina/ubuntu:groovy' } }

    stages {
        stage('Git') {
            steps {
                dir ('aux') {
                    git 'https://github.com/regina-normal/aux.git'
                }
                dir ('regina') {
                    git 'https://github.com/regina-normal/regina.git'
                }
            }
        }

        stage('Configure') {
            steps {
                dir ('regina') {
                    sh 'rm -rf build'
                    sh 'mkdir build'
                }
                dir ('regina/build') {
                    sh 'cmake -DPython_EXECUTABLE=/usr/bin/python3 -DPACKAGING_MODE=1 -DDISABLE_RPATH=1 ..'
                }
            }
        }

        stage('Environment') {
            steps {
                dir ('regina/build') {
                    sh 'make env'
                }
            }
        }

        stage('Package Source') {
            steps {
                dir ('regina/build') {
                    sh 'make package_source'
                }
                sh 'rm -rf debian'
                dir ('debian') {
                    sh 'cp ../regina/build/regina-*.tar.gz .'
                    sh 'for i in *.tar.gz; do mv $i ${i/regina-/regina-normal_}; done'
                    sh 'for i in *.tar.gz; do mv $i ${i/.tar.gz/.orig.tar.gz}; done'
                }
            }
        }

        stage('Build DEB') {
            steps {
                dir ('debian/regina') {
                    sh 'tar --strip-components=1 -zxf ../*.orig.tar.gz'
                    sh 'cp -pR ../../aux/packaging/debian/groovy debian'
                    sh 'DEB_BUILD_OPTIONS="noautodbgsym,parallel=2" debuild --no-sign'
                }
            }
        }
    }
}

