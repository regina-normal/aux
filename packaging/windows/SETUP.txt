------------
DEPENDENCIES
------------

Install MSYS2:

  Download the {64,32}-bit installer from https://msys2.github.io/
  Follow instructions on that page to update the core packages

  General notes for how to use the package manager:

    pacman -Qe             # list installed packages with versions
    pacman -Syu            # full system update
    pacman -S foo bar baz  # install one or more packages by name
    pacman -U foo.zst      # install a locally downloaded package
    pacman -R foo bar baz  # remove one of more packages
    pacman -Ss foo         # search for package whose name contains "foo"
    pacman -Scc            # empty the package cache to free disk space
    pacman -Qm             # list packages not in any repository
    pacman -Qdt            # list orphaned packages (no longer required)

Install basic utilities from MSYS2:

  pacman -S diffutils git man-db patch perl perl-Archive-Zip openssh \
      tar unzip vim wget zip

Install build dependencies from mingw-w64:

  pacman -S make libxslt texinfo
  pacman -S mingw-w64-{x86_64,i686}-toolchain
  pacman -S mingw-w64-{x86_64,i686}-cmake
  pacman -S mingw-w64-{x86_64,i686}-cppunit
  pacman -S mingw-w64-{x86_64,i686}-doxygen
  pacman -S mingw-w64-{x86_64,i686}-graphviz
  pacman -S mingw-w64-{x86_64,i686}-jansson
  pacman -S mingw-w64-{x86_64,i686}-libxml2
  pacman -S mingw-w64-{x86_64,i686}-lmdb
  pacman -S mingw-w64-{x86_64,i686}-ntldd-git
  pacman -S mingw-w64-{x86_64,i686}-popt
  pacman -S mingw-w64-{x86_64,i686}-python

Install build dependencies with standalone installers:

  Qt (from qt.io) - the online installer may require the VC++ redistributable:
      https://www.microsoft.com/en-gb/download/details.aspx?id=48145
  Wix (from wixtoolset.org) - may require .NET to be installed separately;
      on Windows 8 this is done through Control Panel -> Windows Features

To prepare WiX for use:

  If WiX is not on the path, add aliases to ~/.bashrc;
  note that the " (x86)" suffix is only needed for 64-bit windows:

    alias candle='"/c/Program Files (x86)/WiX Toolset v3.11/bin/candle"'
    alias light='"/c/Program Files (x86)/WiX Toolset v3.11/bin/light"'

Ensure the following are UNINSTALLED:

  Python2.7 (from python.org) - causes problems with MinGW's math.h

NOTE: To put gcc on the path, you need to run the mingw{64,32} shell, not msys2.

---------------
BUILDING REGINA
---------------

To build regina and test it directly from the source tree:

  cd ~/git/regina/build

  .../windows/regina-cmake.sh                (for a standard build)
    OR
  .../windows/regina-cmake.sh \
      -DBUILD_INFO='Upstream Windows build'  (for an official release build)

  make
  make test ARGS=-V

To run locally from the install tree:

  - Run "make install" in ~/git/regina/build

  - Run ".../windows/helper.pl dlls" to copy all necessary
    MinGW/Qt/Python DLLs, plugins, etc. into the install tree.

Note that helper.pl hard-codes the location of the install tree.

----------------------
BUILDING THE INSTALLER
----------------------

Update the installer scripts:

  - If this release installs new files, add them to Regina.wxs.template.

      * If more unique IDs are required (e.g., there are new * components),
        then run "uuidgen" (which comes with msys2) to generate them.

Build the installer:

  - Run "make install" from the source tree, ensuring that ~/software is
    clean of any old Regina files.

  - Run ".../windows/helper.pl msi" from the source tree to build the installer.

To package the installer as an ISO image for VirtualBox:

  - Put the .msi installer in a subdirectory Regina.

  - Using Disk Utility, create a new image from folder of type DVD/CD master.

  - Run: hdiutil makehybrid -iso -joliet -o <dest.iso> <source.cdr>

----------------
ADDITIONAL NOTES
----------------

Setting up a Windows VM:

  - If the installer complains it cannot create a partition (observed with
    some Windows 10 x86 install media), change the hard drive from NVMe 1 to
    SATA 0:1 (which may require moving the CD/DVD from SATA 0:1 to SATA 0:2).

Building packages locally:

  - pacman -S base-devel
  - run the msys2 shell (not mingw64) and enter the directory with PKGBUILD
  - MAKEFLAGS=-j2 MINGW_ARCH=mingw64 makepkg-mingw -sCLf
  - pacman -U foo.zst

