Description: avoid __bool, which is a reserved keyword on powerpc
Author: Ben Burton <bab@debian.org>
Origin: upstream
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- regina-normal-7.2/python/docstrings/link/link.h
+++ regina-normal-7.2/python/docstrings/link/link.h
@@ -3630,8 +3630,8 @@ Returns:
 
 namespace StrandRef_ {
 
-// Docstring regina::python::doc::StrandRef_::__bool
-static const char *__bool =
+// Docstring regina::python::doc::StrandRef_::__as_bool
+static const char *__as_bool =
 R"doc(Tests whether this is a non-null reference.
 
 Returns:
--- regina-normal-7.2/python/docstrings/link/modellinkgraph.h
+++ regina-normal-7.2/python/docstrings/link/modellinkgraph.h
@@ -89,8 +89,8 @@ of by the ModelLinkGraph to which they belong.)doc";
 
 namespace ModelLinkGraphArc_ {
 
-// Docstring regina::python::doc::ModelLinkGraphArc_::__bool
-static const char *__bool =
+// Docstring regina::python::doc::ModelLinkGraphArc_::__as_bool
+static const char *__as_bool =
 R"doc(Tests whether this is a non-null arc.
 
 Returns:
--- regina-normal-7.2/python/docstrings/mkdoc.py
+++ regina-normal-7.2/python/docstrings/mkdoc.py
@@ -111,7 +111,7 @@ CPP_OPERATORS = {
     'rshift', '&&': 'land', '||': 'lor', '!': 'lnot', '~': 'bnot', '&': 'band',
     '|': 'bor', '^': 'bxor', '+': 'add', '-': 'sub', '*': 'mul', '/':
     'div', '%': 'mod', '<': 'lt', '>': 'gt', '=': 'assign', '()': 'call',
-    ' bool' : 'bool'
+    ' bool' : 'as_bool'
 }
 
 CPP_OPERATORS = OrderedDict(
--- regina-normal-7.2/python/docstrings/surface/disctype.h
+++ regina-normal-7.2/python/docstrings/surface/disctype.h
@@ -42,8 +42,8 @@ functions.)doc";
 
 namespace DiscType_ {
 
-// Docstring regina::python::doc::DiscType_::__bool
-static const char *__bool =
+// Docstring regina::python::doc::DiscType_::__as_bool
+static const char *__as_bool =
 R"doc(Returns ``True`` if this disc type is non-null.
 
 The implementation will assume that a non-null disc type has non-
--- regina-normal-7.2/python/link/link.cpp
+++ regina-normal-7.2/python/link/link.cpp
@@ -76,7 +76,7 @@ void addLink(pybind11::module_& m) {
         .def("next", &StrandRef::next, rdoc::next)
         .def("prev", &StrandRef::prev, rdoc::prev)
         .def("jump", &StrandRef::jump, rdoc::jump)
-        .def("__bool__", &StrandRef::operator bool, rdoc::__bool)
+        .def("__bool__", &StrandRef::operator bool, rdoc::__as_bool)
     ;
     regina::python::add_output_ostream(s);
     regina::python::add_eq_operators(s, rdoc::__eq, rdoc::__ne);
--- regina-normal-7.2/python/link/modellinkgraph.cpp
+++ regina-normal-7.2/python/link/modellinkgraph.cpp
@@ -63,7 +63,7 @@ void addModelLinkGraph(pybind11::module_& m) {
         .def("dec", [](ModelLinkGraphArc& a) {
            return a--;
         }, rdoc::__dec)
-        .def("__bool__", &ModelLinkGraphArc::operator bool, rdoc::__bool)
+        .def("__bool__", &ModelLinkGraphArc::operator bool, rdoc::__as_bool)
     ;
     regina::python::add_output_ostream(a);
     regina::python::add_eq_operators(a, rdoc::__eq, rdoc::__ne);
--- regina-normal-7.2/python/surface/disctype.cpp
+++ regina-normal-7.2/python/surface/disctype.cpp
@@ -46,7 +46,7 @@ void addDiscType(pybind11::module_& m) {
         .def(pybind11::init<size_t, int>(), rdoc::__init)
         .def(pybind11::init<const DiscType&>(), rdoc::__copy)
         .def(pybind11::self < pybind11::self, rdoc::__lt)
-        .def("__bool__", &DiscType::operator bool, rdoc::__bool)
+        .def("__bool__", &DiscType::operator bool, rdoc::__as_bool)
         .def_readwrite("tetIndex", &DiscType::tetIndex)
         .def_readwrite("type", &DiscType::type)
     ;
